{"version":3,"sources":["assets/Profile_Pic.jpg","components/Navigation/Navigation.js","components/Header/Header.js","components/Services/ServiceIcon.js","components/Services/Services.js","components/Screens/Home.js","components/Screens/About.js","components/Screens/Portfolio.js","components/Screens/Contact.js","components/Screens/404.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","navLinks","map","section","href","className","this","props","title","Component","bImage","backgroundImage","Background","height","backgroundPosition","backgroundRepeat","backgroundSize","Header","style","buttonText","ServiceIcon","history","useHistory","onClick","push","page","icon","iconImage","color","text","Services","faRobot","faRainbow","faTree","faGhost","Home","About","Portfolio","Contact","NotFound","src","App","path","component","exact","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,yC,kSC0B5BC,G,mLApBP,IACMC,EADW,CAAC,OAAQ,QAAS,YAAa,WACtBC,KAAI,SAAAC,GAC1B,MAAgB,SAAZA,EAEI,4BAAI,uBAAGC,KAAM,IAAMD,GAAf,IAA0BA,IAI9B,4BAAI,uBAAGC,KAAM,KAAT,IAAgBD,OAGhC,OACI,6BACI,wBAAIE,UAAU,WAAWC,KAAKC,MAAMC,OACpC,4BAAKP,Q,GAhBIQ,c,iBCAnBC,G,MAAS,CACXC,gBAAgB,OAAD,OAASC,IAAT,KACfC,OAAQ,OACRC,mBAAoB,SACpBC,iBAAkB,YAClBC,eAAgB,UAeLC,E,uKAVP,OACI,4BAAQC,MAAOR,GACX,4BAAKJ,KAAKC,MAAMC,OAChB,qEACA,uBAAGJ,KAAK,cAAcE,KAAKC,MAAMY,iB,GAN5BV,a,gBCYNW,G,MAlBK,SAACb,GACjB,IAAMc,EAAUC,cAMhB,OACI,yBAAKC,QALT,WACIF,EAAQG,KAAK,IAAMjB,EAAMkB,QAKrB,8BACI,kBAAC,IAAD,CAAiBC,KAAMnB,EAAMoB,UAAWC,MAAM,WAElD,4BAAKrB,EAAMC,OACX,2BAAID,EAAMsB,S,QCGPC,E,uKAfP,OACI,yBAAKzB,UAAU,YACX,wCACA,6CACA,yBAAKA,UAAU,OACX,kBAAC,EAAD,CAAasB,UAAWI,IAASN,KAAK,YAAYjB,MAAM,oBAAoBqB,KAAK,qBACjF,kBAAC,EAAD,CAAaF,UAAWK,IAAWP,KAAK,YAAYjB,MAAM,eAAeqB,KAAK,mBAC9E,kBAAC,EAAD,CAAaF,UAAWM,IAAQR,KAAK,YAAYjB,MAAM,WAAWqB,KAAK,oBACvE,kBAAC,EAAD,CAAaF,UAAWO,IAAST,KAAK,YAAYjB,MAAM,UAAUqB,KAAK,0B,GAVpEpB,aCUR0B,EAVF,WACT,OACI,6BACI,kBAAC,EAAD,CAAY3B,MAAM,SAClB,kBAAC,EAAD,CAAQA,MAAM,oBAAoBW,WAAW,kBAC7C,kBAAC,EAAD,QCEGiB,EATD,WACV,OACI,6BACI,kBAAC,EAAD,CAAY5B,MAAM,UADtB,UCOO6B,EATG,WACd,OACI,6BACI,kBAAC,EAAD,CAAY7B,MAAM,cADtB,cCOO8B,EATC,WACZ,OACI,6BACI,kBAAC,EAAD,CAAY9B,MAAM,YADtB,YCqBO+B,EArBE,WACb,OACI,6BACI,kBAAC,EAAD,CAAY/B,MAAM,QAClB,yBAAKU,MAAO,CACR,UAAa,SACb,OAAU,IACV,SAAY,WACZ,IAAO,MACP,KAAQ,MACR,eAAgB,OAChB,UAAa,0BAEb,6CACA,yBAAKsB,IAAK5B,MACV,2DCOD6B,E,uKAfP,OACI,8BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWR,EAAMS,OAAK,IACtC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWP,IAChC,kBAAC,IAAD,CAAOM,KAAK,aAAaC,UAAWN,IACpC,kBAAC,IAAD,CAAOK,KAAK,WAAWC,UAAWL,IAClC,kBAAC,IAAD,CAAOI,KAAK,OAAOC,UAAWJ,EAAUK,OAAK,IAC7C,kBAAC,IAAD,CAAUC,GAAG,e,GAVfpC,aCEEqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAO,kBAAC,IAAD,KAAe,kBAAC,EAAD,OAAwBC,SAASC,eAAe,SD0HzE,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.773aa48f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Profile_Pic.a93a227b.jpg\";","import React, {Component} from \"react\";\r\nimport './Navigation.css';\r\n\r\n\r\nclass Navigation extends Component {\r\n    render() {\r\n        const sections = ['home', 'about', 'portfolio', 'contact'];\r\n        const navLinks = sections.map(section => {\r\n            if (section !== 'home') {\r\n                return (\r\n                    <li><a href={'/' + section}> {section}</a></li>\r\n                )\r\n            } else\r\n                return (\r\n                    <li><a href={'/'}> {section}</a></li>\r\n                )\r\n        });\r\n        return (\r\n            <nav>\r\n                <h2 className=\"heading\">{this.props.title}</h2>\r\n                <ul>{navLinks}</ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, {Component} from \"react\";\r\nimport Background from '../../assets/Profile_Pic.jpg';\r\nimport './Header.css';\r\n\r\nconst bImage = {\r\n    backgroundImage: `url(${Background})`,\r\n    height: '80vh',\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover'\r\n}\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header style={bImage}>\r\n                <h1>{this.props.title}</h1>\r\n                <p>A collection of projects and exercises</p>\r\n                <a href=\"/portfolio\">{this.props.buttonText}</a>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport './ServiceIcon.css';\r\n\r\n\r\nconst ServiceIcon = (props) => {\r\n    const history = useHistory();\r\n\r\n    function handleClick() {\r\n        history.push(\"/\" + props.page);\r\n    }\r\n\r\n    return (\r\n        <div onClick={handleClick}>\r\n            <span>\r\n                <FontAwesomeIcon icon={props.iconImage} color=\"white\"/>\r\n            </span>\r\n            <h4>{props.title}</h4>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServiceIcon;","import React, {Component} from \"react\";\r\nimport './Services.css';\r\nimport ServiceIcon from './ServiceIcon';\r\nimport {faGhost, faRainbow, faRobot, faTree} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Services extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"services\">\r\n                <h3>Services</h3>\r\n                <h2>What We Offer</h2>\r\n                <div className=\"row\">\r\n                    <ServiceIcon iconImage={faRobot} page=\"portfolio\" title=\"Bender Rodgriguez\" text=\"I am using these\"/>\r\n                    <ServiceIcon iconImage={faRainbow} page=\"portfolio\" title=\"Tiny Rainbow\" text=\"icons as a way\"/>\r\n                    <ServiceIcon iconImage={faTree} page=\"portfolio\" title=\"Neatture\" text=\"to teach myself\"/>\r\n                    <ServiceIcon iconImage={faGhost} page=\"portfolio\" title=\"Spooky!\" text=\"component reuse\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Services;","import Navigation from \"../Navigation/Navigation\";\r\nimport Header from \"../Header/Header\";\r\nimport Services from \"../Services/Services\";\r\nimport React from \"react\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Navigation title=\"Home\"/>\r\n            <Header title=\"Jacob's Portfolio\" buttonText=\"Find Out More\"/>\r\n            <Services/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <Navigation title=\"About\"/>\r\n            About\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nconst Portfolio = () =>{\r\n    return(\r\n        <div>\r\n            <Navigation title=\"Portfolio\"/>\r\n            Portfolio\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Portfolio;","import React from \"react\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n            <Navigation title=\"Contact\"/>\r\n            Contact\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;","import Navigation from \"../Navigation/Navigation\";\r\nimport Background from '../../assets/Profile_Pic.jpg';\r\nimport React from \"react\";\r\n\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <Navigation title=\"404\"/>\r\n            <div style={{\r\n                \"textAlign\": \"center\",\r\n                \"margin\": \"0\",\r\n                \"position\": \"absolute\",\r\n                \"top\": \"50%\",\r\n                \"left\": \"50%\",\r\n                \"margin-right\": \"-50%\",\r\n                \"transform\": \"translate(-50%, -50%)\"\r\n            }}>\r\n                <h2>404 Not Found</h2>\r\n                <img src={Background}/>\r\n                <h6>Sorry, Couldn't find it!</h6>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Home from \"./components/Screens/Home\";\nimport About from \"./components/Screens/About\";\nimport Portfolio from \"./components/Screens/Portfolio\";\nimport Contact from \"./components/Screens/Contact\";\nimport NotFound from \"./components/Screens/404\";\n\n\nclass App extends Component {\n    render() {\n        return (\n            <main>\n                <Switch>\n                    <Route path=\"/\" component={Home} exact/>\n                    <Route path=\"/about\" component={About}/>\n                    <Route path=\"/portfolio\" component={Portfolio}/>\n                    <Route path=\"/contact\" component={Contact}/>\n                    <Route path=\"/404\" component={NotFound} exact/>\n                    <Redirect to=\"/404\"/>\n                </Switch>\n            </main>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter} from 'react-router-dom'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}